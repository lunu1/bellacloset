import { useContext, useState } from "react";
import Title from "../components/Title";
import axios from "axios";
import { AppContext } from "../context/AppContext";
import { Button, TextField } from "@mui/material";
import { toast } from "react-toastify";
import { useNavigate } from "react-router-dom";

function Login() {
  const [currentState, setCurrentState] = useState("SIGN IN");
  const titleValue = currentState.split(" ");
  const { backendUrl, isLoggedin, setisLoggedin, getUserData } = useContext(AppContext);
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState(null);
  const [message, setMessage] = useState("");
  const [open, setOpen] = useState(false);
  const [state, setstate] = useState('sign up');
  const navigate = useNavigate();

  const onSubmitHandler = (e) => {
    e.preventDefault();

  };

  const handleLogIn = async (e) => {
    try {
      e.preventDefault();
  
      const { data } = await axios.post(
        backendUrl + '/api/auth/login',
        { email, password },
        {
          withCredentials: true, // Ensure credentials (cookies) are included
        }
      );
  
      if (data.success) {
        setisLoggedin(true);
        getUserData();
        navigate('/');
      } else {
        toast.error(data.message); // Use toast.error for error messages
      }
    } catch (error) {
      // Check if the error is from the backend and contains a response message
      if (error.response && error.response.data && error.response.data.message) {
        toast.error(error.response.data.message); // Display the backend message
      } else {
        toast.error("An error occurred. Please try again."); // Fallback error message
      }
    }
  }

  return (
   <form
          className="flex flex-col gap-6 md:gap-8 w-72 md:w-96"
          onSubmit={handleLogIn}
        >
          <TextField
            // label={i18n.t("loginPage.emailOrPhone")}
            label="Email"
            variant="standard"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
          <TextField
            type="password"
            label="password"
            variant="standard"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            required
          />
          <div className="flex items-center gap-2 justify-between mt-4">
            <Button
              type="submit"
              sx={{
                color: "white",
                fontSize: "16px",
                bgcolor: "hsla(0, 68%, 56%, 1)",
                textTransform: "none",
                padding: "16px 0",
                borderRadius: "4px",
                fontWeight: "500",
                width: "40%",
                ":hover": {
                  bgcolor: "hsla(0, 68%, 56%, .9)",
                },
              }}
              variant="contained"
              color="primary"
              className="my-2"
            >
              login
            </Button>
            <button
              type="button"
              onClick={() => navigate("/reset-password")}
              className="text-base text-red-500 hover:underline font-medium "
            >
              forget
            </button>
          </div>
        </form>
  );
}

export default Login;
